[1mdiff --git a/controllers/cats.js b/controllers/cats.js[m
[1mindex 97b9c6c..8e22e66 100644[m
[1m--- a/controllers/cats.js[m
[1m+++ b/controllers/cats.js[m
[36m@@ -4,7 +4,7 @@[m [mimport session from "express-session"[m
 [m
 async function index(req, res) {[m
   try {[m
[31m-    const cats = await Cat.find({})[m
[32m+[m[32m    const cats = await Cat.find({owner : req.session.user._id})[m
     res.render('cats/index',  {cats, title:"Categories"})[m
   } catch (error) {[m
     console.log(error)[m
[36m@@ -15,7 +15,6 @@[m [masync function index(req, res) {[m
 [m
 async function newCat(req,res){[m
   try {[m
[31m- [m
     res.render('cats/new',  { title:"Create Category"})[m
   } catch (error) {[m
     console.log(error)[m
[36m@@ -31,7 +30,7 @@[m [masync function create(req,res){[m
     req.body.owner = req.session.user._id[m
     req.body.taskList = [][m
     const cat = await Cat.create(req.body)[m
[31m-    const cats = await Cat.find({})[m
[32m+[m[32m    const cats = await Cat.find({owner : req.session.user._id})[m
     res.render('cats/index',  {cats, title:"Categories"})[m
   } catch (error) {[m
     console.log(error)[m
[36m@@ -42,10 +41,14 @@[m [masync function create(req,res){[m
 async function show(req, res) {[m
   try {[m
     const cat = await Cat.findById(req.params.catId).populate(['taskList'])[m
[31m-    const cats = await Cat.find({})[m
[32m+[m[32m    const cats = await Cat.find({owner : req.session.user._id})[m
[32m+[m[32m    if (cat.owner.equals(req.session.user._id)){[m
     res.render('cats/show', {[m
       cat,cats, title: "Categories"[m
     })[m
[32m+[m[32m    }else{[m
[32m+[m[32m      res.render('message' ,{message: "you don't have access to this task"})[m
[32m+[m[32m    }[m[41m [m
   } catch (error) {[m
     console.log(error)[m
     res.redirect('/')[m
[36m@@ -56,8 +59,12 @@[m [masync function show(req, res) {[m
 async function addTask(req,res){[m
   try {[m
     const cat = await Cat.findById(req.params.catId)[m
[31m-    const tasks = await Task.find({})[m
[31m-    res.render('cats/add-task', {cat,tasks,title: `Add a Task to ${cat.title}`})[m
[32m+[m[32m    const tasks = await Task.find({owner : req.session.user._id})[m
[32m+[m[32m    if (cat.owner.equals(req.session.user._id)) {[m
[32m+[m[32m      res.render('cats/add-task', {cat,tasks,title: `Add a Task to ${cat.title}`})[m
[32m+[m[32m    }else{[m
[32m+[m[32m      res.render('message', {message: "you are not the owner of this category"})[m
[32m+[m[32m    }[m
   } catch (error) {[m
     console.log(error)[m
     res.redirect('/cats')[m
[36m@@ -68,9 +75,14 @@[m [masync function addTask(req,res){[m
 async function addTaskToCat(req,res){[m
   try {[m
     const cat = await Cat.findById(req.params.catId)[m
[31m-    cat.taskList.push(req.params.taskId)[m
[31m-    await cat.save()[m
[31m-    res.redirect(`/cats/${cat._id}`)[m
[32m+[m[32m    const task = await Task.findById(req.params.taskId)[m
[32m+[m[32m    if (task.owner.equals(req.session.user._id) && cat.owner.equals(req.session.user._id)){[m
[32m+[m[32m      cat.taskList.push(req.params.taskId)[m
[32m+[m[32m      await cat.save()[m
[32m+[m[32m      res.redirect(`/cats/${cat._id}`)[m
[32m+[m[32m    }else{[m
[32m+[m[32m      res.render('message' ,{message: "you don't have access to this task"})[m
[32m+[m[32m    }[m
   } catch (error) {[m
     console.log(error)[m
     res.redirect('/cats')[m
[1mdiff --git a/controllers/tasks.js b/controllers/tasks.js[m
[1mindex 6a34402..228fa54 100644[m
[1m--- a/controllers/tasks.js[m
[1m+++ b/controllers/tasks.js[m
[36m@@ -5,9 +5,6 @@[m [mimport session from "express-session"[m
 async function index(req, res) {[m
   try {[m
     const tasks = await Task.find({owner : req.session.user._id})[m
[31m-    // const tasks = allTasks.filter(task => {[m
[31m-    //   return task.owner.equals(req.session.user._id)[m
[31m-    // })[m
     res.render('tasks/index',  {tasks, title:"Task List"})[m
   } catch (error) {[m
     console.log(error)[m
[36m@@ -104,8 +101,7 @@[m [masync function update(req,res){[m
     //give access to user only to modify[m
     if (task.owner.equals(req.session.user._id)){[m
       await task.updateOne(req.body)[m
[31m-      const tasks = await Task.find({})[m
[31m-      res.render('tasks/index',  {tasks, title:"Task List"})[m
[32m+[m[32m      res.redirect('/tasks')[m
     }[m
     else{[m
       res.render('message' ,{message: "you don't have access to delete or modify this item"})[m
[36m@@ -118,12 +114,11 @@[m [masync function update(req,res){[m
 }[m
 export {[m
   index,[m
[31m-  // show,[m
[32m+[m[32m  show,[m
   newTask as new,[m
   create,[m
   deleteTask as delete,[m
   edit,[m
   update,[m
[31m-  show,[m
 [m
 }[m
\ No newline at end of file[m
